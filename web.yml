- name: Set up unix user accounts
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Gather data on instances in group
      gcp_compute_instance_info:
        filters:
        - name = {{ gcp_web_instance }}-*
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: instancedata

    - name: Add host to groupname
      add_host: hostname={{ item.name }} groupname=server_instances
      with_items: "{{ instancedata.resources }}"

# Deploy a pencilcode web server
- name: Set up unix user accounts
  hosts: server_instances
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Create source user
      user:
        name: source
        uid: 1100
        group: users
        shell: /bin/bash

    - name: Fix sudoers file to allow sudo -u
      replace:
        dest: /etc/sudoers
        regexp: '^(\w+) ALL=NOPASSWD: ALL$'
        replace: '\1 ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'


- name: Install standard packages
  hosts: server_instances
  gather_facts: no
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Install https support for apt
      apt:
        update_cache: yes
        name:
        - apt-transport-https
        state: latest

    - name: Upgrade apt packages to the latest version
      apt:
        upgrade: dist

    - name: Add nodesource signing key
      apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
        id: 68576280

    - name: Add nodesource apt repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_6.x xenial main

    - name: Install apt packages
      apt:
        update_cache: yes
        name:
        - build-essential
        - nginx
        - uwsgi
        - uwsgi-plugin-python
        - nodejs
        - git
        - libfontconfig1
        - logrotate
        - vim
        - bash-completion
        state: latest

    - name: Create apache-style nginx configuration directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
       - /etc/nginx/sites-enabled
       - /etc/nginx/sites-available

    - name: Replace nginx top-level configuration, to run as www-data
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
      notify:
        - restart nginx

    - name: Remove nginx default website
      file:
        path: "{{ item }}"
        state: absent
      with_items:
       - /etc/nginx/sites-enabled/default
       - /etc/nginx/conf.d
      notify:
        - restart nginx

    - name: Install global npm packages
      npm: name={{ item }} global=yes production=yes
      with_items:
        - grunt-cli
        - forever

  handlers:
    - name: restart nginx
      systemd: name=nginx daemon_reload=yes state=restarted


- name: Pull and build project code
  hosts: server_instances
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  roles:
    - role: nodeproject
      repo: https://github.com/PencilCode/pencilcode.git
      dir: pencilcode
      version: master
      tags: pull_pencilcode
    - role: nodeproject
      repo: https://github.com/PencilCode/pencilcode.git
      dir: staging
      tags: pull_staging
    - role: nodeproject
      repo: https://github.com/PencilCode/codegym.git
      dir: gym 
      tags: pull_gym
    - role: nodeproject
      repo: https://github.com/PencilCode/blog.git
      dir: blog
      tags: pull_blog
    - role: nodeproject
      repo: https://github.com/PencilCode/reference.git
      dir: ref
      tags: pull_ref
    - role: nodeproject
      repo: https://github.com/PencilCode/animate.git
      dir: animate
      tags: pull_animate


- name: Link pencilcode service directories
  hosts: tag_webserver
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files:
#    - vars/secrets.yml
    - vars/gcp_config.yml

  pre_tasks:
    - file: path=/mnt/datadisk/{{ item }} state=directory mode=755
      become_user: www-data
      with_items:
        - cache
        - data

    - file: path=/srv/site state=directory mode=755
    - name: Create /srv/site/proxycache
      file: path=/srv/site/proxycache state=directory
            owner=www-data group=www-data

  roles:
#    - role: topdomain
#      domain_dir: pencilcode.org
#      source_dir: pencilcode
#    - role: topdomain
#      domain_dir: pencil.cc
#      source_dir: staging
      # domain_ssl_key: "{{ pencilcc_ssl_key }}"
      # domain_ssl_file: "pencilcc"
    - role: topdomain
      domain_dir: pencil.io
      source_dir: pencilcode

  tasks:
    - file: dest=/srv/site/{{ item }} state=link src=/home/source/{{ item }}/out
      with_items:
        - animate
        - blog
        - gym
        - ref

- name: Setup fishs service
  hosts: server_instances
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml
  roles:
    - role: nodeproject
      repo: https://github.com/PencilCode/fish.git
      dir: fish
      tags: pull_fish
  tasks:
    - file: path=/srv/fish state=directory mode=755
    - file: state=link dest=/srv/fish/{{ item }} src=/home/source/{{ item }}
      with_items:
        - staging
        - animate
        - blog
        - gym
        - ref
        - fish

    - name: Install fishs service
      file: dest=/etc/init.d/fishs state=link
        src=/srv/fish/fish/fishs
      notify: restart fishs
    - file: path=/var/log/fishs state=directory mode=755

  handlers:
    - name: restart fishs
      systemd: name=fishs daemon_reload=yes state=restarted


- name: Setup main pencilcode repository
  hosts: server_instances
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files:
#    - vars/secrets.yml
    - vars/gcp_config.yml

  roles:
    - role: nodeproject
      repo: "https://github.com/PencilCode/pencilcode.git"
      dir: pencilcode
      tags: pull_pencilcode
      version: master
      notify: ["restart nginx", "restart pencils", "restart pencilsock"]
    - role: topdomain
      domain_dir: pencilcode.net
      source_dir: pencilcode
      domain_ssl_key: "{{ pencilcode_ssl_key }}"
      domain_ssl_file: "pencilcode"

  tasks:
    - name: Link /srv/site/root to pencilcode source
      file: dest=/srv/site/root state=link
        src=/home/source/pencilcode

    - name: Install nginx_site.conf
      file: state=link
        dest=/etc/nginx/sites-available/nginx_site.conf
        src=/srv/site/root/nginx/nginx_site.conf
      notify:
        - restart nginx
    - name: Enable nginx_site.conf
      file: state=link
        dest=/etc/nginx/sites-enabled/nginx_site.conf
        src=/etc/nginx/sites-available/nginx_site.conf
      notify:
        - restart nginx

    - name: Install pencils service
      file: dest=/etc/init.d/pencils state=link
        src=/srv/site/root/pencils
      notify:
        - restart pencils
    - file: path=/var/log/pencils state=directory mode=755

    - name: Install pencilsock service
      file: dest=/etc/init.d/pencilsock state=link
        src=/srv/site/root/pencilsock
      notify:
        - restart pencilsock
    - file: path=/var/log/pencilsock state=directory mode=755

    - name: Install uwsgi services
      file: dest=/etc/uwsgi/apps-available/{{ item }} state=link
        src=/srv/site/root/wsgi/{{ item }}
      with_items:
        - img.json
        - goto.json
      notify:
        - restart uwsgi

    - name: Enable uwsgi services
      file: dest=/etc/uwsgi/apps-enabled/{{ item }} state=link
        src=/etc/uwsgi/apps-available/{{ item }}
      with_items:
        - img.json
        - goto.json
      notify:
        - restart uwsgi

  handlers:
    - name: restart nginx
      systemd: name=nginx daemon_reload=yes state=restarted

    - name: restart pencilsock
      systemd: name=pencilsock daemon_reload=yes state=restarted

    - name: restart pencils
      systemd: name=pencils daemon_reload=yes state=restarted

    - name: restart uwsgi
      systemd: name=uwsgi daemon_reload=yes state=restarted

- name: Set up logrotate configuration
  hosts: server_instances
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  tasks:
    - copy: src=files/logrotate/{{ item }} dest=/etc/logrotate.d/{{ item }}
      with_items:
       - nginx
       - pencilsock
       - pencils
       - fishs

  handlers:
    - name: restart logrotate
      systemd: name=logrotate daemon_reload=yes state=restarted

- name: Ensure all services are started
  hosts: server_instances
  connection: ssh
  become: yes

  tasks:
    - name: enable sysv services
      service: name={{ item }} enabled=yes
      with_items:
        - uwsgi
        - pencilsock
        - pencils
        - fishs

    - name: start services
      systemd: name={{ item }} daemon_reload=yes state=started enabled=yes
      with_items:
        - nginx
        - uwsgi
        - pencilsock
        - pencils
        - fishs
