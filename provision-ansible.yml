- name: Create ansible VM
  hosts: localhost
  gather_facts: no
  connection: local

  vars:
    gcp_project: pencil-code-test
    gcp_cred_kind: serviceaccount
    gcp_cred_file: /etc/ansible/keys/service-key.json
    gcp_image: 'https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20170330'
    gcp_machine_name: ansible3
    gcp_machine_type: f1-micro
    gcp_region: "us-central1"
    gcp_zone: "us-central1-a"

  tasks:
    - name: Create disk
      gcp_compute_disk:
        name: 'pc-ansible-disk'
        source_image: "{{ gcp_image }}"
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: disk

    - name: Create address
      gcp_compute_address:
        name: 'pc-ansible-address'
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: address

    - name: Create instance
      gcp_compute_instance:
        name: "{{ gcp_machine_name }}"
        machine_type: "{{ gcp_machine_type }}"
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        network_interfaces:
#          - network: null # use default
           - access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: instance

    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=5 timeout=120

    - name: Add host to groupname
      add_host: hostname={{ address.address }} groupname=launched

#    - name: reset known-hosts for ips
#      command: ssh-keygen -R {{ address.address }}

#    - shell: ssh-keyscan {{ address.address }} >> ~/.ssh/known_hosts

#    - name: reset known-hosts for names
#      command: ssh-keygen -R {{ instance.name }}

#    - shell: ssh-keyscan {{ instance.name }} >> ~/.ssh/known_hosts

- name: Set up machines
  hosts: launched
  connection: ssh
  become: yes

  vars:
    - user_used: "{{ansible_user|default(lookup('env', 'USER'), True) }}"

  tasks:
    - name: Install https support for apt
      apt: name=apt-transport-https update_cache=yes

    - name: upgrade apt packages to the latest version
      apt: upgrade=dist

    - name: Add nodesource signing key
      apt_key: >
        url=https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
        id=68576280

    - name: Add nodesource apt repository
      apt_repository: >
        repo='deb https://deb.nodesource.com/node_0.12 wheezy main'

    - name: upgrade apt packages to the latest version
      apt: upgrade=dist

    - name: Install apt packages
      apt: pkg={{ item }} state=latest
      with_items:
        - build-essential
        - python-setuptools
        - python-dev
        - python-openssl
        - libssl-dev
        - libffi-dev
        - nodejs
        - git
        - vim
        - bash-completion

    - name: Install pip
      easy_install: name=pip

    - name: Install ansible
      pip: name={{ item }}
      with_items:
        - ansible
        - apache-libcloud

    - name: copy ssh key
      become: no
      copy: src=/home/{{ user_used }}/.ssh/id_rsa mode=400
           dest=/home/{{ user_used }}/.ssh/id_rsa

    - name: ensure github.com is a known host
      become: no
      lineinfile:
        dest: /home/{{ user_used }}/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        regexp: "^github\\.com"

    - name: sync {{ dir }} to latest code
      git: >
        repo=git@github.com:PencilCode/deployment.git
        dest=/home/{{ user_used }}/deployment
      become_user: "{{ user_used }}"

    - file: path=/etc/ansible state=directory

    - name: set up gce configruation
      copy: src=files/gce.py dest=/etc/ansible/hosts mode=755
    - copy: src=files/gce.ini dest=/etc/ansible/gce.ini
    - file: path=/etc/ansible/keys state=directory
    - copy:
        content: "{{ gce_json_key }}"
        dest: /etc/ansible/keys/service-key.json

    - name: set up ansible defaults
      become: no
      copy: src=/home/{{ user_used }}/{{ item }}
           dest=/home/{{ user_used }}/{{ item }}
      with_items:
       - .ansible.cfg
       - .ansible_vault_password
       - .ssh/id_rsa.pub
       - .gitconfig
