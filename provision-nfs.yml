- name: Create instance(s)
  hosts: localhost
  gather_facts: no
  connection: local

  vars:
    machine_type: n1-standard-1 # default
    image: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20161221
    service_account_email: 670662678080-v4dlk7smudbfr0rbc2n5mcb2mnsdbqpb@developer.gserviceaccount.com
    pem_file: /etc/ansible/keys/service-key.pem
    project_id: paris-code

  tasks:
    - name: Launch instances
      gce:
          instance_names: nfs
          machine_type: "{{ machine_type }}"
          image: "{{ image }}"
          service_account_email: "{{ service_account_email }}"
          pem_file: "{{ pem_file }}"
          project_id: "{{ project_id }}"
          tags: nfs
      register: gce

    - name: Create log disks
      gce_pd:
          name: "{{ item.name }}-log"
          instance_name: "{{ item.name }}"
          mode: READ_WRITE
          size_gb: 10
          service_account_email: "{{ service_account_email }}"
          pem_file: "{{ pem_file }}"
          project_id: "{{ project_id }}"
          zone: "{{ item.zone }}"
      with_items: gce.instance_data

    - name: Create data disks
      gce_pd:
          name: "{{ item.name }}-data"
          instance_name: "{{ item.name }}"
          mode: READ_WRITE
          size_gb: 60
          disk_type: pd-ssd
          service_account_email: "{{ service_account_email }}"
          pem_file: "{{ pem_file }}"
          project_id: "{{ project_id }}"
          zone: "{{ item.zone }}"
      with_items: gce.instance_data

    - name: Create backup disk
      gce_pd:
          name: "{{ item.name }}-backup"
          instance_name: "{{ item.name }}"
          mode: READ_WRITE
          size_gb: 60
          service_account_email: "{{ service_account_email }}"
          pem_file: "{{ pem_file }}"
          project_id: "{{ project_id }}"
          zone: "{{ item.zone }}"
      with_items: gce.instance_data

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=5 timeout=60
      with_items: gce.instance_data

    - name: Add host to groupname
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: gce.instance_data

    - name: reset known-hosts for ips
      command: ssh-keygen -R {{ item.public_ip }}
      with_items: gce.instance_data

    - name: registering new known-host for ips
      shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
      with_items: gce.instance_data

    - name: reset known-hosts for names
      command: ssh-keygen -R {{ item.name }}
      with_items: gce.instance_data

    - name: registering new known-host for names
      shell: ssh-keyscan -H {{ item.name }} >> ~/.ssh/known_hosts
      with_items: gce.instance_data

- name: Set up disks
  hosts: launched
  connection: ssh
  sudo: yes
  tasks:
    - name: Set up filesystem for log disks
      filesystem: >
        fstype=ext4
        dev=/dev/disk/by-id/google-{{ ansible_hostname }}-log
        opts="-E lazy_itable_init=0,lazy_journal_init=0"

    - name: Set up filesystem for data disks
      filesystem: >
        fstype=ext4
        dev=/dev/disk/by-id/google-{{ ansible_hostname }}-data
        opts="-E lazy_itable_init=0,lazy_journal_init=0"

    - name: Set up filesystem for backup disks
      filesystem: >
        fstype=ext4
        dev=/dev/disk/by-id/google-{{ ansible_hostname }}-backup
        opts="-E lazy_itable_init=0,lazy_journal_init=0"

    - name: Mount log disks
      mount: >
        name=/var/log
        fstype=ext4
        src=/dev/disk/by-id/google-{{ ansible_hostname }}-log
        state=mounted
      notify: restart rsyslog

    - name: Mount data disks
      mount: >
        name=/data
        fstype=ext4
        src=/dev/disk/by-id/google-{{ ansible_hostname }}-data
        state=mounted

    - name: Set up file permissions
      file: path=/data owner=www-data group=www-data state=directory

    - name: Set up subdirectories
      file: >
        path=/mnt/datadisk/{{ item }}
        state=directory mode=755 owner=www-data group=www-data
      with_items:
        - cache
        - data
        - proxycache

    - name: Mount backup disks
      mount: >
        name=/backup
        fstype=ext4
        src=/dev/disk/by-id/google-{{ ansible_hostname }}-backup
        state=mounted

    - name: Set up file permissions
      file: path=/backup owner=www-data group=www-data state=directory

  handlers:
    - name: restart rsyslog
      service: name=rsyslog state=restarted

- name: Set up nfs
  hosts: launched
  connection: ssh
  gather_facts: no
  sudo: yes

  roles:
    - role: geerlingguy.nfs
      nfs_exports:
        - /data *(rw,sync)
        - /backup *(ro,sync)

- name: Set up rsnapshot
  hosts: launched
  connection: ssh
  gather_facts: no
  sudo: yes
  
  tasks:
    - name: Install rsnapshot
      apt: name=rsnapshot state=latest

    - name: Configure rsnapshot
      copy: src=files/rsnapshot.conf dest=/etc/rsnapshot.conf

    - name: Configure rsnapshot cron
      copy: src=files/rsnapshot.cron dest=/etc/cron.d/rsnapshot

