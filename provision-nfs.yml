- name: Create NFS instance
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Create address
      gcp_compute_address:
        name: "{{ gcp_nfs_address }}"
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: address

    - name: Create instance
      gcp_compute_instance:
        name: "{{ gcp_nfs_machine_name }}"
        machine_type: "{{ gcp_nfs_machine_type }}"
        disks:
          - auto_delete: true
            boot: true
            initialize_params:
              disk_name: "{{ gcp_nfs_disk }}"
              source_image: "{{ gcp_nfs_image }}"
          - auto_delete: false
            boot: false
            initialize_params:
              disk_name: "{{ gcp_nfs_disk }}-log"
              disk_size_gb: 10
          - auto_delete: false
            boot: false
            initialize_params:
              disk_name: "{{ gcp_nfs_disk }}-data"
              disk_size_gb: 100
          - auto_delete: false
            boot: false
            initialize_params:
              disk_name: "{{ gcp_nfs_disk }}-backup"
              disk_size_gb: 200
        metadata:
          enable-oslogin: True
        network_interfaces:
           - access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: instance

    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=5 timeout=120

    - name: Add host to groupname
      add_host: hostname={{ gcp_nfs_machine_name }} groupname=launched

    - name: Reset known-hosts for IPs
      command: ssh-keygen -R {{ address.address }}

    - name: Add the new instance as a known host
      shell: ssh-keyscan {{ address.address }} >> ~/.ssh/known_hosts


- name: Set up disks
  hosts: launched
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  vars:
    - ansible_ssh_private_key_file: "~/.ssh/{{ gcp_service_user }}"

  tasks:
    - name: Make ansible service account credential directory
      file:
        path: "{{ gcp_cred_file | dirname }}"
        state: directory

    - name: Copy over ansible service account credential file
      copy:
        src: "{{ gcp_cred_file }}"
        dest: "{{ gcp_cred_file }}"

    - name: Create SSH key directory (if it doesn't exist yet)
      file:
        path: "/home/{{ gcp_service_user }}/.ssh"
        owner: "{{ gcp_service_user }}"
        state: directory

    - name: Copy service account private SSH key
      copy:
        src: "{{ ansible_ssh_private_key_file }}"
        mode: 400
        owner: "{{ gcp_service_user }}"
        dest: "/home/{{ gcp_service_user }}/.ssh/{{ gcp_service_user }}"

    - name: Set up filesystem for log disks
      filesystem:
        fstype: ext4
        dev: /dev/disk/by-id/google-persistent-disk-1
        opts: "-E lazy_itable_init=0,lazy_journal_init=0,discard"

    - name: Set up filesystem for data disks
      filesystem:
        fstype: ext4
        dev: /dev/disk/by-id/google-persistent-disk-2
        opts: "-b 1024 -N 10000000 -E lazy_itable_init=0,lazy_journal_init=0,discard"

    - name: Set up filesystem for backup disks
      filesystem:
        fstype: ext4
        dev: /dev/disk/by-id/google-persistent-disk-3
        opts: "-b 1024 -N 20000000 -E lazy_itable_init=0,lazy_journal_init=0,discard"

    - name: Mount log disks
      mount:
        path: /var/log
        fstype: ext4
        src: /dev/disk/by-id/google-persistent-disk-1
        state: mounted
      notify: restart rsyslog

    - name: Mount data disks
      mount:
        path: /data
        fstype: ext4
        src: /dev/disk/by-id/google-persistent-disk-2
        state: mounted

    - name: Set up file permissions
      ansible.builtin.file: 
        path: /data 
        owner: www-data
        group: www-data
        state: directory

    - name: Set up subdirectories
      ansible.builtin.file:
        path: /mnt/datadisk/{{ item }}
        state: directory
        mode: 755
        owner: www-data
        group: www-data
      with_items:
        - cache
        - data
        - proxycache

    - name: Mount backup disks
      mount:
        path: /backup
        fstype: ext4
        src: /dev/disk/by-id/google-persistent-disk-3
        state: mounted

    - name: Set up file permissions
      ansible.builtin.file: 
        path: /backup
        owner: www-data
        group: www-data
        state: directory

  handlers:
    - name: restart rsyslog
      service: name=rsyslog state=restarted

- name: Set up nfs
  hosts: launched
  connection: ssh
  gather_facts: no 
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  roles:
    - role: geerlingguy.nfs
      nfs_exports:
        - /data *(rw,sync,no_subtree_check)
        - /backup *(ro,sync,no_subtree_check)

- name: Disable mlocate
  hosts: launched
  connection: ssh
  gather_facts: no
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Change permission of cron.daily mlocate to disable execution.
      file:
        path: "/etc/cron.daily/mlocate"
        mode: "a-x"

- name: Set up rsnapshot
  hosts: launched
  connection: ssh
  gather_facts: no
  remote_user: "{{ gcp_service_user }}"
  become: yes
  vars_files: vars/gcp_config.yml
  
  tasks:
    - name: Install rsnapshot
      apt:
        update_cache: yes
        name:
        - rsnapshot
        state: latest

    - name: Configure rsnapshot
      copy:
        src: "files/rsnapshot.conf"
        dest: "/etc/rsnapshot.conf"

    - name: Configure rsnapshot cron
      copy:
        src: "files/rsnapshot.cron"
        dest: "/etc/cron.d/rsnapshot"
