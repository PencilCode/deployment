- name: Create ansible VM
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files: vars/gcp_config.yml

  tasks:
    - name: Create disk
      gcp_compute_disk:
        name: "{{ gcp_bootstrap_disk }}"
        source_image: "{{ gcp_bootstrap_image }}"
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: disk

    - name: Create address
      gcp_compute_address:
        name: "{{ gcp_bootstrap_address }}"
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: address

    - name: Create instance
      gcp_compute_instance:
        name: "{{ gcp_bootstrap_machine_name }}"
        machine_type: "{{ gcp_bootstrap_machine_type }}"
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        metadata:
          enable-oslogin: True
        network_interfaces:
           - access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes: "{{ gcp_scopes }}"
      register: instance

    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=5 timeout=120

    - name: Add host to groupname
      add_host: hostname={{ address.address }} groupname=launched

    - name: Reset known-hosts for IPs
      command: ssh-keygen -R {{ address.address }}

    - name: Add the new instance as a known host
      shell: ssh-keyscan {{ address.address }} >> ~/.ssh/known_hosts


- name: Set up ansible VM
  hosts: launched
  connection: ssh
  remote_user: "{{ gcp_service_user }}"
  become: yes

  vars_files: vars/gcp_config.yml

  vars:
    - ansible_ssh_private_key_file: "~/.ssh/{{ gcp_service_user }}"

  tasks:

    - name: Create SSH key directory (if it doesn't exist yet)
      file:
        path: "/home/{{ gcp_service_user }}/.ssh"
        state: directory

	# TODO: change the user and known hosts to be owned by gcp_service_user
    - name: Copy service account private SSH key
      copy: src={{ ansible_ssh_private_key_file }} mode=400
            dest="/home/{{ gcp_service_user }}/.ssh/{{ gcp_service_user }}"

    - name: Add github.com as known host
      lineinfile:
        dest: "/home/{{ gcp_service_user }}/.ssh/known_hosts"
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        regexp: "^github\\.com"

    - name: Make ansible service account credential directory
      file:
        path: "{{ gcp_cred_file | dirname }}"
        state: directory

    - name: Copy over ansible service account credential file
      copy:
        content: "{{ gcp_cred_file }}"
        dest: "{{ gcp_cred_file }}"

    - name: Copy over miscellaneous helpful files
      copy: src=~/{{ item }}
            dest=/home/{{ gcp_service_user }}/{{ item }}
      with_items:
       - .gitconfig

    - name: Install https support for apt
      apt: name=apt-transport-https update_cache=yes

    - name: Upgrade apt packages to the latest version
      apt: upgrade=dist

    - name: Add nodesource signing key
      apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
        id: 68576280

    - name: Add nodesource apt repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_0.12 wheezy main

    - name: Upgrade apt packages to the latest version
      apt: upgrade=dist

    - name: Install base apt packages
      apt:
        update_cache: yes
        name:
        - build-essential
        - software-properties-common
        - libssl-dev
        - libffi-dev
        - nodejs
        - git
        - vim
        - bash-completion
        state: latest

#    - name: Upgrade pip
#      pip:
#        extra_args: --no-cache-dir
#        name: pip
#        executable: pip3
#        state: latest

    - name: Add deadsnakes apt repository (for old Xenial python3.8)
      apt_repository:
        repo: 'ppa:deadsnakes/ppa'

    - name: Install python3.8 apt packages (Xenial)
      apt:
        update_cache: yes
        autoremove: yes
        name:
        - python3.8-dev
        - python3.8-distutils
        state: latest

    - name: Set default python3 to python3.8 (Xenial)
      shell: "/usr/sbin/update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1"

    - name: Install pip for python3.8 (Xenial)
      shell: "/usr/bin/wget -qO- https://bootstrap.pypa.io/get-pip.py | python3.8"

    - name: Install ansible and other critical packages
      pip:
        extra_args: --no-cache-dir
        executable: pip3
        name:
          - ansible
          - apache-libcloud
          - pyopenssl

#    - name: Sync latest deployment scripts
#      git:
#        repo: https://github.com/PencilCode/deployment
#        dest: "/home/{{ gcp_service_user }}/deployment"
#        version: pencil.io
